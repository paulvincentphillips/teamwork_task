{"ast":null,"code":"var _jsxFileName = \"/home/paul/teamwork_task/src/containers/users.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport UsersGrid from \"../components/users/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UsersContainer = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [planets, setPlanets] = useState([]);\n\n  const getUsers = async () => {\n    try {\n      let allUsers = [];\n      let response = await fetch(\"https://swapi.dev/api/people\");\n      let jsonData = await response.json();\n      /*\n        push users to array\n        while there is a next\n        fetch llink \n        push users\n        repeat...\n        */\n\n      while (true) {\n        jsonData.results.map(result => {\n          return allUsers.push(result);\n        });\n\n        if (jsonData.next) {\n          response = await fetch(jsonData.next);\n          jsonData = await response.json();\n          jsonData.results.map(result => {\n            return allUsers.push(result);\n          });\n        } else {\n          break;\n        }\n      }\n\n      setUsers(allUsers);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const getPlanets = async () => {\n    try {\n      let allPlanets = [];\n      let response = await fetch(\"https://swapi.dev/api/planets\");\n      let jsonData = await response.json();\n      /*\n        push planets to array\n        while there is a next\n        fetch llink \n        push users\n        repeat...\n        */\n\n      while (true) {\n        jsonData.results.map(result => {\n          return allPlanets.push(result);\n        });\n\n        if (jsonData.next) {\n          response = await fetch(jsonData.next);\n          jsonData = await response.json();\n          jsonData.results.map(result => {\n            return allPlanets.push(result);\n          });\n        } else {\n          break;\n        }\n      }\n\n      console.log(allPlanets);\n      setPlanets(allPlanets);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    getUsers();\n    getPlanets();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UsersGrid, {\n    children: /*#__PURE__*/_jsxDEV(UsersGrid.UserRow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UsersContainer, \"6U0oHEqvrL8NPoU+GqTicVHFzv8=\");\n\n_c = UsersContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersContainer\");","map":{"version":3,"sources":["/home/paul/teamwork_task/src/containers/users.js"],"names":["React","useState","useEffect","UsersGrid","UsersContainer","users","setUsers","planets","setPlanets","getUsers","allUsers","response","fetch","jsonData","json","results","map","result","push","next","error","console","message","getPlanets","allPlanets","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport UsersGrid from \"../components/users/index\";\n\nexport const UsersContainer = () => {\n  const [users, setUsers] = useState([]);\n  const [planets, setPlanets] = useState([]);\n\n  const getUsers = async () => {\n    try {\n      let allUsers = [];\n      let response = await fetch(\"https://swapi.dev/api/people\");\n      let jsonData = await response.json();\n      /*\n        push users to array\n        while there is a next\n        fetch llink \n        push users\n        repeat...\n        */\n      while(true){\n        jsonData.results.map(result => {\n            return allUsers.push(result);\n        });\n        if(jsonData.next){\n            response = await fetch(jsonData.next);\n            jsonData = await response.json();\n            jsonData.results.map(result => {\n                return allUsers.push(result);\n            });\n        }else{\n            break;\n        }\n      }  \n      \n      setUsers(allUsers);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const getPlanets= async () => {\n    try {\n      let allPlanets = [];\n      let response = await fetch(\"https://swapi.dev/api/planets\");\n      let jsonData = await response.json();\n      /*\n        push planets to array\n        while there is a next\n        fetch llink \n        push users\n        repeat...\n        */\n      while(true){\n        jsonData.results.map(result => {\n            return allPlanets.push(result);\n        });\n        if(jsonData.next){\n            response = await fetch(jsonData.next);\n            jsonData = await response.json();\n            jsonData.results.map(result => {\n                return allPlanets.push(result);\n            });\n        }else{\n            break;\n        }\n      }  \n      \n      console.log(allPlanets);\n      setPlanets(allPlanets);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    getUsers();\n    getPlanets();\n  }, []);\n\n  return (\n    <UsersGrid>\n      <UsersGrid.UserRow />\n    </UsersGrid>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}