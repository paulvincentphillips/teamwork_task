{"ast":null,"code":"var _jsxFileName = \"/home/paul/teamwork_task/src/containers/users.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport UsersGrid from \"../components/users/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UsersContainer = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [planets, setPlanets] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n\n  const getUsers = async () => {\n    try {\n      let allUsers = [];\n      let response = await fetch(\"https://swapi.dev/api/people\");\n      let jsonData = await response.json(); //push users to array while there is a next link, push users, repeat...\n\n      while (true) {\n        jsonData.results.map(result => {\n          return allUsers.push(result);\n        });\n\n        if (jsonData.next) {\n          response = await fetch(jsonData.next);\n          jsonData = await response.json();\n        } else {\n          break;\n        }\n      }\n\n      setUsers(allUsers);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const getPlanets = async () => {\n    try {\n      let allPlanets = [];\n      let response = await fetch(\"https://swapi.dev/api/planets\");\n      let jsonData = await response.json(); //push planets to array while there is a next link, push planets, repeat...\n\n      while (true) {\n        jsonData.results.map(result => {\n          return allPlanets.push(result);\n        });\n\n        if (jsonData.next) {\n          response = await fetch(jsonData.next);\n          jsonData = await response.json();\n        } else {\n          break;\n        }\n      }\n\n      setPlanets(allPlanets);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    getUsers();\n    getPlanets();\n  }, []);\n\n  const getPlanetName = url => {\n    const splitUrl = url.split(\"/\");\n    const planetIndex = splitUrl[splitUrl.length - 2];\n    return planets[planetIndex - 1].name;\n  };\n\n  return /*#__PURE__*/_jsxDEV(UsersGrid, {\n    children: [\"Filter by name:\", /*#__PURE__*/_jsxDEV(UsersGrid.UserInput, {\n      onChange: e => setFilter(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UsersGrid.UserRow, {\n      children: [/*#__PURE__*/_jsxDEV(UsersGrid.UserItem, {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UsersGrid.UserItem, {\n        children: \"Height (cm)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UsersGrid.UserItem, {\n        children: \"Mass\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UsersGrid.UserItem, {\n        children: \"Created\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UsersGrid.UserItem, {\n        children: \"Edited\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UsersGrid.UserItem, {\n        children: \"Planet Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), users.filter(user => user.name.includes(filter)).map(user => {\n      return /*#__PURE__*/_jsxDEV(UsersGrid.UserRow, {\n        children: [/*#__PURE__*/_jsxDEV(UsersGrid.UserItem, {\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(UsersGrid.UserItem, {\n          children: user.height\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(UsersGrid.UserItem, {\n          children: user.mass\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(UsersGrid.UserItem, {\n          children: user.created\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(UsersGrid.UserItem, {\n          children: user.edited\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(UsersGrid.UserItem, {\n          children: getPlanetName(user.homeworld)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, user.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UsersContainer, \"9Kc3JsiYcABQzhp03xFRF5KHV30=\");\n\n_c = UsersContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersContainer\");","map":{"version":3,"sources":["/home/paul/teamwork_task/src/containers/users.js"],"names":["React","useState","useEffect","UsersGrid","UsersContainer","users","setUsers","planets","setPlanets","filter","setFilter","getUsers","allUsers","response","fetch","jsonData","json","results","map","result","push","next","error","console","message","getPlanets","allPlanets","getPlanetName","url","splitUrl","split","planetIndex","length","name","e","target","value","user","includes","height","mass","created","edited","homeworld"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport UsersGrid from \"../components/users/index\";\n\nexport const UsersContainer = () => {\n  const [users, setUsers] = useState([]);\n  const [planets, setPlanets] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n\n  const getUsers = async () => {\n    try {\n      let allUsers = [];\n      let response = await fetch(\"https://swapi.dev/api/people\");\n      let jsonData = await response.json();\n\n      //push users to array while there is a next link, push users, repeat...\n      while (true) {\n        jsonData.results.map((result) => {\n          return allUsers.push(result);\n        });\n        if (jsonData.next) {\n          response = await fetch(jsonData.next);\n          jsonData = await response.json();\n        } else {\n          break;\n        }\n      }\n\n      setUsers(allUsers);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const getPlanets = async () => {\n    try {\n      let allPlanets = [];\n      let response = await fetch(\"https://swapi.dev/api/planets\");\n      let jsonData = await response.json();\n\n      //push planets to array while there is a next link, push planets, repeat...\n      while (true) {\n        jsonData.results.map((result) => {\n          return allPlanets.push(result);\n        });\n        if (jsonData.next) {\n          response = await fetch(jsonData.next);\n          jsonData = await response.json();\n        } else {\n          break;\n        }\n      }\n\n      setPlanets(allPlanets);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    getUsers();\n    getPlanets();\n  }, []);\n\n  const getPlanetName = (url) => {\n    const splitUrl = url.split(\"/\");\n    const planetIndex = splitUrl[splitUrl.length - 2];\n    return planets[planetIndex - 1].name;\n  };\n\n  return (\n    <UsersGrid>\n      Filter by name:\n      <UsersGrid.UserInput onChange={(e) => setFilter(e.target.value)} />\n      <UsersGrid.UserRow>\n        <UsersGrid.UserItem>Name</UsersGrid.UserItem>\n        <UsersGrid.UserItem>Height (cm)</UsersGrid.UserItem>\n        <UsersGrid.UserItem>Mass</UsersGrid.UserItem>\n        <UsersGrid.UserItem>Created</UsersGrid.UserItem>\n        <UsersGrid.UserItem>Edited</UsersGrid.UserItem>\n        <UsersGrid.UserItem>Planet Name</UsersGrid.UserItem>\n      </UsersGrid.UserRow>\n      {users.filter(user => user.name.includes(filter)).map((user) => {\n        return (\n          <UsersGrid.UserRow key={user.name}>\n            <UsersGrid.UserItem>{user.name}</UsersGrid.UserItem>\n            <UsersGrid.UserItem>{user.height}</UsersGrid.UserItem>\n            <UsersGrid.UserItem>{user.mass}</UsersGrid.UserItem>\n            <UsersGrid.UserItem>{user.created}</UsersGrid.UserItem>\n            <UsersGrid.UserItem>{user.edited}</UsersGrid.UserItem>\n            <UsersGrid.UserItem>\n              {getPlanetName(user.homeworld)}\n            </UsersGrid.UserItem>\n          </UsersGrid.UserRow>\n        );\n      })}\n    </UsersGrid>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}